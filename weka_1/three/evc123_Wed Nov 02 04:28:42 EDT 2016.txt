 Cornell University Library We gratefully acknowledge support from the Simons Foundation and member institutions arXiv.org > cs > arXiv:1611.00020 All papers Titles Authors Abstracts Full text Help pages (Help | Advanced search) Full-text links: Download: PDF Other formats (license) Current browse context: cs.CL < prev | next > new | recent | 1611 Change to browse by: cs cs.AI cs.LG References & Citations NASA ADS DBLP - CS Bibliography listing | bibtex Chen Liang Jonathan Berant Quoc Le Kenneth D. Forbus Ni Lao Bookmark (what is this?) Computer Science > Computation and Language Title: Neural Symbolic Machines: Learning Semantic Parsers on Freebase with Weak Supervision Authors: Chen Liang, Jonathan Berant, Quoc Le, Kenneth D. Forbus, Ni Lao (Submitted on 31 Oct 2016 (v1), last revised 3 Nov 2016 (this version, v3)) Abstract: Extending the success of deep neural networks to natural language understanding and symbolic reasoning requires complex operations and external memory. Recent neural program induction approaches have attempted to address this problem, but are typically limited to differentiable memory, and consequently cannot scale beyond small synthetic tasks. In this work, we propose the Manager-Programmer-Computer framework, which integrates neural networks with non-differentiable memory to support abstract, scalable and precise operations through a friendly neural computer interface. Specifically, we introduce a Neural Symbolic Machine, which contains a sequence-to-sequence neural "programmer", and a non-differentiable "computer" that is a Lisp interpreter with code assist. To successfully apply REINFORCE for training, we augment it with approximate gold programs found by an iterative maximum likelihood training process. NSM is able to learn a semantic parser from weak supervision over a large knowledge base. It achieves new state-of-the-art performance on WebQuestionsSP, a challenging semantic parsing dataset, with weak supervision. Compared to previous approaches, NSM is end-to-end, therefore does not rely on feature engineering or domain specific knowledge. Comments: Fix the Latex compilation problem. In case the problem still exists, we also hosted the PDF version on another link: this https URL Subjects: Computation and Language (cs.CL); Artificial Intelligence (cs.AI); Learning (cs.LG) Cite as: arXiv:1611.00020 [cs.CL]   (or arXiv:1611.00020v3 [cs.CL] for this version) Submission history From: Chen Liang [view email] [v1] Mon, 31 Oct 2016 20:07:23 GMT (248kb,D) [v2] Wed, 2 Nov 2016 05:25:19 GMT (378kb,D) [v3] Thu, 3 Nov 2016 16:24:24 GMT (246kb,D) Which authors of this paper are endorsers? | Disable MathJax (What is MathJax?) Link back to: arXiv, form interface, contact. 